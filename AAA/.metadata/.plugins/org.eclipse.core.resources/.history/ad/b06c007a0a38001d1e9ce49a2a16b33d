package algo;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static StringTokenizer st;
	static int[] t;
	static int[] p;
	static int N,max=0;;
	public static void main(String[] args) throws NumberFormatException, IOException {
		N = Integer.parseInt(br.readLine());
		t= new int[N+1];
		p = new int[N+1];
		for(int i=1;i<=N;i++) {
			st=new StringTokenizer(br.readLine());
			t[i]=Integer.parseInt(st.nextToken());
			p[i]=Integer.parseInt(st.nextToken());
		}
		for(int i=1;i<N;i++) {
			dfs(i,0);
		}
		System.out.println(max);
		
		
	}
	static void dfs(int day, int money) {
		if(day+t[day]>N+1) {
			max = Math.max(money,max);
			return;
		}
		if(day+t[day]<=N+1) {
			money = money+p[day];
			day = day+t[day];
			dfs(day,money);
			}
		else {
			day+=t[day];
			dfs(day,money);
		}
		
		
		
	}
}
