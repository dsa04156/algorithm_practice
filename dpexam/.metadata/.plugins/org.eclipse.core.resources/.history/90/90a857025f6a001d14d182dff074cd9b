package exam;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;
public class Main {
	static BufferedReader br= new BufferedReader(new InputStreamReader(System.in));
	static StringTokenizer st;
	static int N;
	static int[][] map;
	static int[] person;
	public static void main(String[] args) throws NumberFormatException, IOException {
	N = Integer.parseInt(br.readLine());
	person = new int[N];
	map=new int[N][N];
	st=new StringTokenizer(br.readLine());
	for(int i=0;i<N;i++) {
		person[i]=Integer.parseInt(st.nextToken());
	}
	for(int i=0;i<N;i++) {
		st=new StringTokenizer(br.readLine());
		int a=Integer.parseInt(st.nextToken());
		for(int j=0;j<a;j++) {
			int y = Integer.parseInt(st.nextToken())-1;
			map[i][y]=1;
		}
	}
	v= new boolean[N];
	dfs(0);
	

	}
	static boolean [] v;
	static void dfs(int idx) {
		if(idx==N) {
			for(int i=0;i<N;i++) {
				if(v[i]) {
					System.out.print(i+" ");
				}
			}
			System.out.println();
			return;
		}
		v[idx]=true;
		dfs(idx+1);
		v[idx]=false;
		dfs(idx+1);
		
	}
}
